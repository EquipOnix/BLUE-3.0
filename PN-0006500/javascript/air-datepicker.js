const localeCs={days:["Neděle","Pondělí","Úterý","Středa","Čtvrtek","Pátek","Sobota"],daysShort:["Ne","Po","Út","St","Čt","Pá","So"],daysMin:["Ne","Po","Út","St","Čt","Pá","So"],months:["Leden","Únor","Březen","Duben","Květen","Červen","Červenec","Srpen","Září","Říjen","Listopad","Prosinec"],monthsShort:["Led","Úno","Bře","Dub","Kvě","Čvn","Čvc","Srp","Zář","Říj","Lis","Pro"],today:"Dnes",clear:"Vymazat",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},localeDa={days:["Søndag","Mandag","Tirsdag","Onsdag","Torsdag","Fredag","Lørdag"],daysShort:["Søn","Man","Tir","Ons","Tor","Fre","Lør"],daysMin:["Sø","Ma","Ti","On","To","Fr","Lø"],months:["Januar","Februar","Marts","April","Maj","Juni","Juli","August","September","Oktober","November","December"],monthsShort:["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"],today:"I dag",clear:"Nulstil",dateFormat:"dd/MM/yyyy",timeFormat:"HH:mm",firstDay:1},localeDe={days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],daysShort:["Son","Mon","Die","Mit","Don","Fre","Sam"],daysMin:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],monthsShort:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],today:"Heute",clear:"Aufräumen",dateFormat:"dd.MM.yyyy",timeFormat:"HH:ii",firstDay:1},localeEn={days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],daysShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],daysMin:["Su","Mo","Tu","We","Th","Fr","Sa"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],monthsShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],today:"Today",clear:"Clear",dateFormat:"MM/dd/yyyy",timeFormat:"hh:mm aa",firstDay:0},localeEs={days:["Domingo","Lunes","Martes","Miércoles","Jueves","Viernes","Sábado"],daysShort:["Dom","Lun","Mar","Mie","Jue","Vie","Sab"],daysMin:["Do","Lu","Ma","Mi","Ju","Vi","Sa"],months:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],monthsShort:["Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"],today:"Hoy",clear:"Limpiar",dateFormat:"dd/MM/yyyy",timeFormat:"hh:mm aa",firstDay:1},localeFi={days:["Sunnuntai","Maanantai","Tiistai","Keskiviikko","Torstai","Perjantai","Lauantai"],daysShort:["Su","Ma","Ti","Ke","To","Pe","La"],daysMin:["Su","Ma","Ti","Ke","To","Pe","La"],months:["Tammikuu","Helmikuu","Maaliskuu","Huhtikuu","Toukokuu","Kesäkuu","Heinäkuu","Elokuu","Syyskuu","Lokakuu","Marraskuu","Joulukuu"],monthsShort:["Tammi","Helmi","Maalis","Huhti","Touko","Kesä","Heinä","Elo","Syys","Loka","Marras","Joulu"],today:"Tänään",clear:"Tyhjennä",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},localeFr={days:["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],daysShort:["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"],daysMin:["Di","Lu","Ma","Me","Je","Ve","Sa"],months:["Janvier","Février","Mars","Avril","Mai","Juin","Juillet","Août","Septembre","Octobre","Novembre","Décembre"],monthsShort:["Jan","Fév","Mars","Avr","Mai","Juin","Juil","Août","Sep","Oct","Nov","Dec"],today:"Aujourd'hui",clear:"Effacer",dateFormat:"dd/MM/yyyy",timeFormat:"HH:mm",firstDay:1},localeHu={days:["Vasárnap","Hétfő","Kedd","Szerda","Csütörtök","Péntek","Szombat"],daysShort:["Va","Hé","Ke","Sze","Cs","Pé","Szo"],daysMin:["V","H","K","Sz","Cs","P","Sz"],months:["Január","Február","Március","Április","Május","Június","Július","Augusztus","Szeptember","Október","November","December"],monthsShort:["Jan","Feb","Már","Ápr","Máj","Jún","Júl","Aug","Szep","Okt","Nov","Dec"],today:"Ma",clear:"Törlés",dateFormat:"yyyy-MM-dd",timeFormat:"hh:mm aa",firstDay:1},localeNl={days:["zondag","maandag","dinsdag","woensdag","donderdag","vrijdag","zaterdag"],daysShort:["zo","ma","di","wo","do","vr","za"],daysMin:["zo","ma","di","wo","do","vr","za"],months:["Januari","Februari","Maart","April","Mei","Juni","Juli","Augustus","September","Oktober","November","December"],monthsShort:["Jan","Feb","Mrt","Apr","Mei","Jun","Jul","Aug","Sep","Okt","Nov","Dec"],today:"Vandaag",clear:"Legen",dateFormat:"dd-MM-yyyy",timeFormat:"HH:mm",firstDay:0},localePl={days:["Niedziela","Poniedziałek","Wtorek","Środa","Czwartek","Piątek","Sobota"],daysShort:["Nie","Pon","Wto","Śro","Czw","Pią","Sob"],daysMin:["Nd","Pn","Wt","Śr","Czw","Pt","So"],months:["Styczeń","Luty","Marzec","Kwiecień","Maj","Czerwiec","Lipiec","Sierpień","Wrzesień","Październik","Listopad","Grudzień"],monthsShort:["Sty","Lut","Mar","Kwi","Maj","Cze","Lip","Sie","Wrz","Paź","Lis","Gru"],today:"Dzisiaj",clear:"Wyczyść",dateFormat:"yyyy-MM-dd",timeFormat:"hh:mm:aa",firstDay:1},localePrBr={days:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],daysShort:["Dom","Seg","Ter","Qua","Qui","Sex","Sab"],daysMin:["Do","Se","Te","Qu","Qu","Se","Sa"],months:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],monthsShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],today:"Hoje",clear:"Limpar",dateFormat:"dd/MM/yyyy",timeFormat:"HH:mm",firstDay:0},localePt={days:["Domingo","Segunda","Terça","Quarta","Quinta","Sexta","Sábado"],daysShort:["Dom","Seg","Ter","Qua","Qui","Sex","Sab"],daysMin:["Do","Se","Te","Qa","Qi","Sx","Sa"],months:["Janeiro","Fevereiro","Março","Abril","Maio","Junho","Julho","Agosto","Setembro","Outubro","Novembro","Dezembro"],monthsShort:["Jan","Fev","Mar","Abr","Mai","Jun","Jul","Ago","Set","Out","Nov","Dez"],today:"Hoje",clear:"Limpar",dateFormat:"dd/MM/yyyy",timeFormat:"HH:mm",firstDay:1},localeRo={days:["Duminică","Luni","Marţi","Miercuri","Joi","Vineri","Sâmbătă"],daysShort:["Dum","Lun","Mar","Mie","Joi","Vin","Sâm"],daysMin:["D","L","Ma","Mi","J","V","S"],months:["Ianuarie","Februarie","Martie","Aprilie","Mai","Iunie","Iulie","August","Septembrie","Octombrie","Noiembrie","Decembrie"],monthsShort:["Ian","Feb","Mar","Apr","Mai","Iun","Iul","Aug","Sept","Oct","Nov","Dec"],today:"Azi",clear:"Şterge",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},localeRu={days:["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"],daysShort:["Вос","Пон","Вто","Сре","Чет","Пят","Суб"],daysMin:["Вс","Пн","Вт","Ср","Чт","Пт","Сб"],months:["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],monthsShort:["Янв","Фев","Мар","Апр","Май","Июн","Июл","Авг","Сен","Окт","Ноя","Дек"],today:"Сегодня",clear:"Очистить",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},localeSi={days:["ඉරිදා","සදුදා","අඟහරැවදා","බදාදා","බ්‍රහස්‍පතින්‍","සිකුරාදා","සෙනසුරාදා"],daysShort:["ඉරිදා","සදුදා","අඟහ","බදාදා","බ්‍රහස්‍","සිකුරා","සෙන"],daysMin:["ඉරි","සදු","අඟ","බදා","බ්‍රහ","සිකු","සෙ"],months:["ජනවාරි","පෙබරවාරි","මාර්තු","අප්‍රේල්","මැයි","ජූනි","ජූලි","අගෝස්තු","සැප්තැම්බර්","ඔක්තෝබර්","නොවැම්බර්","දෙසැම්බර්"],monthsShort:["ජන","පෙබ","මාර්","අප්‍රේල්","මැයි","ජූනි","ජූලි","අගෝ","සැප්","ඔක්","නොවැ","දෙසැ"],today:"අද",clear:"යලි සකසන්න",dateFormat:"yyyy-mm-dd",timeFormat:"hh:ii aa",firstDay:1},localeSk={days:["Nedeľa","Pondelok","Utorok","Streda","Štvrtok","Piatok","Sobota"],daysShort:["Ned","Pon","Uto","Str","Štv","Pia","Sob"],daysMin:["Ne","Po","Ut","St","Št","Pi","So"],months:["Január","Február","Marec","Apríl","Máj","Jún","Júl","August","September","Október","November","December"],monthsShort:["Jan","Feb","Mar","Apr","Máj","Jún","Jul","Aug","Sep","Okt","Nov","Dec"],today:"Dnes",clear:"Vymazať",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},localeSv={days:["Söndag","Måndag","Tisdag","Onsdag","Torsdag","Fredag","Lördag"],daysShort:["Sön","Mån","Tis","Ons","Tor","Fre","Lör"],daysMin:["Sö","Må","Ti","On","To","Fr","Lö"],months:["Januari","Februari","Mars","April","Maj","Juni","Juli","Augusti","September","Oktober","November","December"],monthsShort:["Jan","Feb","Mar","Apr","Maj","Jun","Jul","Aug","Sep","Okt","Nov","Dec"],today:"I dag",clear:"Nollställ",dateFormat:"yyyy-MM-dd",timeFormat:"HH:mm",firstDay:1},localeTh={days:["วันอาทิตย์","วันจันทร์","วันอังคาร","วันพุธ","วันพฤหัสบดี","วันศุกร์","วันเสาร์"],daysShort:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],daysMin:["อา.","จ.","อ.","พ.","พฤ.","ศ.","ส."],months:["มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม"],monthsShort:["ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค."],today:"วันนี้",clear:"ล้าง",dateFormat:"dd/MM/yyyy",timeFormat:"HH:mm",firstDay:0},localeTr={days:["Pazar","Pazartesi","Salı","Çarşamba","Perşembe","Cuma","Cumartesi"],daysShort:["Pzr","Pts","Sl","Çar","Per","Cum","Cts"],daysMin:["Pa","Pt","Sl","Ça","Pe","Cu","Ct"],months:["Ocak","Şubat","Mart","Nisan","Mayıs","Haziran","Temmuz","Ağustos","Eylül","Ekim","Kasım","Aralık"],monthsShort:["Oca","Şbt","Mrt","Nsn","Mys","Hzr","Tmz","Ağt","Eyl","Ekm","Ksm","Arl"],today:"Bugün",clear:"Temizle",dateFormat:"dd.MM.yyyy",timeFormat:"hh:mm aa",firstDay:1},localeUk={days:["Неділя","Понеділок","Вівторок","Середа","Четвер","П’ятниця","Субота"],daysShort:["Нед","Пнд","Вів","Срд","Чтв","Птн","Сбт"],daysMin:["Нд","Пн","Вт","Ср","Чт","Пт","Сб"],months:["Січень","Лютий","Березень","Квітень","Травень","Червень","Липень","Серпень","Вересень","Жовтень","Листопад","Грудень"],monthsShort:["Січ","Лют","Бер","Кві","Тра","Чер","Лип","Сер","Вер","Жов","Лис","Гру"],today:"Сьогодні",clear:"Очистити",dateFormat:"dd.MM.yyyy",timeFormat:"HH:mm",firstDay:1},localeZh={days:["周日","周一","周二","周三","周四","周五","周六"],daysShort:["日","一","二","三","四","五","六"],daysMin:["日","一","二","三","四","五","六"],months:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],monthsShort:["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],today:"今天",clear:"清除",dateFormat:"yyyy-MM-dd",timeFormat:"HH:mm",firstDay:1},consts={days:"days",months:"months",years:"years",day:"day",month:"month",year:"year",eventChangeViewDate:"changeViewDate",eventChangeCurrentView:"changeCurrentView",eventChangeFocusDate:"changeFocusDate",eventChangeSelectedDate:"changeSelectedDate",eventChangeTime:"changeTime",eventChangeLastSelectedDate:"changeLastSelectedDate",actionSelectDate:"selectDate",actionUnselectDate:"unselectDate",cssClassWeekend:"-weekend-"},defaults={classes:"",inline:!1,locale:localeEs,startDate:new Date,firstDay:"",weekends:[6,0],dateFormat:"",altField:"",altFieldDateFormat:"T",toggleSelected:!0,keyboardNav:!0,selectedDates:!1,container:"",isMobile:!1,visible:!1,position:"bottom left",offset:12,view:consts.days,minView:consts.days,showOtherMonths:!0,selectOtherMonths:!0,moveToOtherMonthsOnSelect:!0,showOtherYears:!0,selectOtherYears:!0,moveToOtherYearsOnSelect:!0,minDate:"",maxDate:"",disableNavWhenOutOfRange:!0,multipleDates:!1,multipleDatesSeparator:", ",range:!1,dynamicRange:!0,buttons:!1,monthsField:"monthsShort",showEvent:"focus",autoClose:!1,prevHtml:'<svg><path d="M 17,12 l -5,5 l 5,5"></path></svg>',nextHtml:'<svg><path d="M 14,12 l 5,5 l -5,5"></path></svg>',navTitles:{days:"MMMM, <i>yyyy</i>",months:"yyyy",years:"yyyy1 - yyyy2"},timepicker:!1,onlyTimepicker:!1,dateTimeSeparator:" ",timeFormat:"",minHours:0,maxHours:24,minMinutes:0,maxMinutes:59,hoursStep:1,minutesStep:1,onSelect:!1,onChangeViewDate:!1,onChangeView:!1,onRenderCell:!1,onShow:!1,onHide:!1,onClickDayName:!1};function getEl(e,t=document){return"string"==typeof e?t.querySelector(e):e}function createElement({tagName:e="div",className:t="",innerHtml:s="",id:i="",attrs:a={}}={}){var r=document.createElement(e);if(t&&r.classList.add(...t.split(" ")),i&&(r.id=i),s&&(r.innerHTML=s),a)for(var n in a)r.setAttribute(n,a[n]);return r}function setAttribute(e,t){for(var[s,i]of Object.entries(t))e.setAttribute(s,i);return e}function insertAfter(e,t){return t.parentNode.insertBefore(e,t.nextSibling),e}function deepCopy(e){return JSON.parse(JSON.stringify(e))}function getDaysCount(e){return new Date(e.getFullYear(),e.getMonth()+1,0).getDate()}function getParsedDate(e){var t=e.getHours(),s=t%12==0?12:t%12;return{year:e.getFullYear(),month:e.getMonth(),fullMonth:e.getMonth()+1<10?"0"+(e.getMonth()+1):e.getMonth()+1,date:e.getDate(),fullDate:e.getDate()<10?"0"+e.getDate():e.getDate(),day:e.getDay(),hours:t,fullHours:getLeadingZeroNum(t),hours12:s,fullHours12:getLeadingZeroNum(s),minutes:e.getMinutes(),fullMinutes:e.getMinutes()<10?"0"+e.getMinutes():e.getMinutes()}}function getLeadingZeroNum(e){return e<10?"0"+e:e}function getDecade(e){e=10*Math.floor(e.getFullYear()/10);return[e,9+e]}function subDays(e,t){var{year:e,month:s,date:i}=getParsedDate(e);return new Date(e,s,i-t)}function addDays(e,t){var{year:e,month:s,date:i}=getParsedDate(e);return new Date(e,s,i+t)}function classNames(...e){let s=[];return e.forEach(e=>{if("object"==typeof e)for(var t in e)e[t]&&s.push(t);else e&&s.push(e)}),s.join(" ")}function toggleClass(e,t){for(var s in t)t[s]?e.classList.add(s):e.classList.remove(s)}function addClass(e,...t){e.length?e.forEach(e=>{e.classList.add(...t)}):e.classList.add(...t)}function removeClass(e,...t){e.length?e.forEach(e=>{e.classList.remove(...t)}):e.classList.remove(...t)}function isSameDate(e,t,s=consts.days){return!(!e||!t)&&(e=getParsedDate(e),t=getParsedDate(t),{[consts.days]:e.date===t.date&&e.month===t.month&&e.year===t.year,[consts.months]:e.month===t.month&&e.year===t.year,[consts.years]:e.year===t.year}[s])}function isDateBigger(e,t,s){e=copyDate(e,!1).getTime(),t=copyDate(t,!1).getTime();return s?t<=e:t<e}function isDateSmaller(e,t){return!isDateBigger(e,t,!0)}function copyDate(e,t=!0){e=new Date(e.getTime());return"boolean"!=typeof t||t||resetTime(e),e}function resetTime(e){return e.setHours(0,0,0,0),e}function isDateBetween(e,t,s){return isDateBigger(e,t)&&isDateSmaller(e,s)}function addEventListener(e,t,s){e instanceof Element&&"string"==typeof t&&"function"==typeof s&&(e.length?e.forEach(e=>{e.addEventListener(t,s)}):e.addEventListener(t,s))}function closest(e,t){return!(!e||e===document||e instanceof DocumentFragment)&&(e.matches(t)?e:closest(e.parentNode,t))}function clamp(e,t,s){return s<e?s:e<t?t:e}function deepMerge(n,...e){return e.filter(e=>e).forEach(e=>{for(var[t,s]of Object.entries(e)){var i,a,r;void 0!==s&&"[object Object]"===s.toString()?(i=void 0!==n[t]?n[t].toString():void 0,a=s.toString(),r=Array.isArray(s)?[]:{},n[t]=!n[t]||i!==a?r:n[t],deepMerge(n[t],s)):n[t]=s}}),n}function createDate(e){let t=e;return e instanceof Date||(t=new Date(e)),isNaN(t.getTime())&&(console.log(`Unable to convert value "${e}" to Date object`),t=!1),t}function getWordBoundaryRegExp(e){var t="\\s|\\.|-|/|\\\\|,|\\$|\\!|\\?|:|;";return new RegExp("(^|>|"+t+")("+e+")($|<|"+t+")","g")}class DatepickerButtons{constructor({dp:e,opts:t}){this.dp=e,this.opts=t,this.init()}init(){this.createElement(),this.render()}createElement(){this.$el=createElement({className:"air-datepicker-buttons"})}destroy(){this.$el.parentNode.removeChild(this.$el)}clearHtml(){return this.$el.innerHTML="",this}generateButtons(){let e=this.opts["buttons"];(e=Array.isArray(e)?e:[e]).forEach(e=>{let t=e;"string"==typeof e&&buttonPresets[e]&&(t=buttonPresets[e]);e=this.createButton(t);t.onClick&&this.attachEventToButton(e,t.onClick),this.$el.appendChild(e)})}attachEventToButton(e,t){e.addEventListener("click",()=>{t(this.dp)})}createButton({content:e,className:t,tagName:s="button",attrs:i={}}){return createElement({tagName:s,innerHtml:`<span tabindex='-1'>${"function"==typeof e?e(this.dp):e}</span>`,className:classNames("air-datepicker-button",t),attrs:i})}render(){this.generateButtons()}}const buttonPresets={today:{content:e=>e.locale.today,onClick:e=>e.setViewDate(new Date)},clear:{content:e=>e.locale.clear,onClick:e=>e.clear()}};let templates={[consts.days]:'<div class="air-datepicker-body--day-names"></div>'+`<div class="air-datepicker-body--cells -${consts.days}-"></div>`,[consts.months]:`<div class="air-datepicker-body--cells -${consts.months}-"></div>`,[consts.years]:`<div class="air-datepicker-body--cells -${consts.years}-"></div>`};class DatepickerBody{constructor({dp:e,type:t,opts:s}){this.dp=e,this.type=t,this.opts=s,this.cells=[],this.$el="",this.pressed=!1,this.isVisible=!0,this.init()}init(){this._buildBaseHtml(),this.type===consts.days&&this.renderDayNames(),this.render(),this._bindEvents(),this._bindDatepickerEvents()}_bindEvents(){var{range:e,dynamicRange:t}=this.opts;this.$el.addEventListener("mouseover",this.onMouseOverCell),this.$el.addEventListener("mouseout",this.onMouseOutCell),this.$el.addEventListener("click",this.onClickBody),e&&t&&(this.$el.addEventListener("mousedown",this.onMouseDown),this.$el.addEventListener("mousemove",this.onMouseMove),window.document.addEventListener("mouseup",this.onMouseUp))}_bindDatepickerEvents(){this.dp.on(consts.eventChangeViewDate,this.onChangeViewDate),this.dp.on(consts.eventChangeCurrentView,this.onChangeCurrentView)}_buildBaseHtml(){this.$el=createElement({className:`air-datepicker-body -${this.type}-`,innerHtml:templates[this.type]}),this.$names=getEl(".air-datepicker-body--day-names",this.$el),this.$cells=getEl(".air-datepicker-body--cells",this.$el)}_getDayNamesHtml(e=this.dp.locale.firstDay){let t="",s=this.dp.isWeekend,i=this.opts["onClickDayName"],a=e,r=0;for(;r<7;){var n=a%7,o=classNames("air-datepicker-body--day-name",{[consts.cssClassWeekend]:s(n),"-clickable-":!!i}),h=this.dp.locale.daysMin[n];t+=`<div class="${o}" data-day-index='${n}'>${h}</div>`,r++,a++}return t}_getDaysCells(){var{viewDate:e,locale:{firstDay:t}}=this.dp,s=getDaysCount(e),{year:e,month:i}=getParsedDate(e),a=new Date(e,i,1),e=new Date(e,i,s),i=a.getDay()-t,e=6<(e=6-e.getDay()+t)?e-7:e;let r=subDays(a,i=i<0?7+i:i),n=s+i+e,o=r.getDate(),{year:h,month:d}=getParsedDate(r),l=0;for(;l<n;){var c=new Date(h,d,o+l);this._generateCell(c),l++}}_generateCell(e){var{type:t,dp:s,opts:i}=this,t=new DatepickerCell({type:t,dp:s,opts:i,date:e,body:this});return this.cells.push(t),t}_generateDayCells(){this._getDaysCells()}_generateMonthCells(){let e=this.dp.parsedViewDate["year"],t=0;for(;t<12;)this.cells.push(this._generateCell(new Date(e,t))),t++}_generateYearCells(){let e=getDecade(this.dp.viewDate),t=e[0]-1,s=e[1]+1,i=t;for(;i<=s;)this.cells.push(this._generateCell(new Date(i,0))),i++}renderDayNames(){this.$names.innerHTML=this._getDayNamesHtml()}_generateCells(){switch(this.type){case consts.days:this._generateDayCells();break;case consts.months:this._generateMonthCells();break;case consts.years:this._generateYearCells()}}show(){this.isVisible=!0,this.$el.classList.remove("-hidden-")}hide(){this.isVisible=!1,this.$el.classList.add("-hidden-")}destroyCells(){this.cells.forEach(e=>e.destroy()),this.cells=[],this.$cells.innerHTML=""}destroy(){this.destroyCells(),this.dp.off(consts.eventChangeViewDate,this.onChangeViewDate),this.dp.off(consts.eventChangeCurrentView,this.onChangeCurrentView)}handleClick=e=>{var t,e=e.target.adpCell;e.isDisabled||(this.dp.isMinViewReached?(t=this.dp._checkIfDateIsSelected(e.date,e.type))?this.dp._handleAlreadySelectedDates(t,e.date):this.dp.selectDate(e.date):this.dp.down())};handleDayNameClick=e=>{e=e.target.getAttribute("data-day-index");this.opts.onClickDayName({dayIndex:Number(e),datepicker:this.dp})};onChangeCurrentView=e=>{e!==this.type?this.hide():(this.show(),this.render())};onMouseOverCell=e=>{e=closest(e.target,".air-datepicker-cell");this.dp.setFocusDate(!!e&&e.adpCell.date)};onMouseOutCell=()=>{this.dp.setFocusDate(!1)};onClickBody=e=>{var t=this.opts["onClickDayName"],s=e.target;s.closest(".air-datepicker-cell")&&this.handleClick(e),t&&s.closest(".air-datepicker-body--day-name")&&this.handleDayNameClick(e)};onMouseDown=e=>{this.pressed=!0;e=closest(e.target,".air-datepicker-cell"),e=e&&e.adpCell;isSameDate(e.date,this.dp.rangeDateFrom)&&(this.rangeFromFocused=!0),isSameDate(e.date,this.dp.rangeDateTo)&&(this.rangeToFocused=!0)};onMouseMove=e=>{var t,s,i,a;this.pressed&&this.dp.isMinViewReached&&(e.preventDefault(),e=(e=closest(e.target,".air-datepicker-cell"))&&e.adpCell,{selectedDates:i,rangeDateTo:t,rangeDateFrom:s}=this.dp,e)&&!e.isDisabled&&(e=e["date"],2===i.length)&&(this.rangeFromFocused&&!isDateBigger(e,t)&&({hours:i,minutes:a}=getParsedDate(s),e.setHours(i),e.setMinutes(a),this.dp.rangeDateFrom=e,this.dp.replaceDate(s,e)),this.rangeToFocused)&&!isDateSmaller(e,s)&&({hours:i,minutes:a}=getParsedDate(t),e.setHours(i),e.setMinutes(a),this.dp.rangeDateTo=e,this.dp.replaceDate(t,e))};onMouseUp=()=>{this.pressed=!1,this.rangeFromFocused=!1,this.rangeToFocused=!1};onChangeViewDate=(e,t)=>{if(this.isVisible){var s=getDecade(e),i=getDecade(t);switch(this.dp.currentView){case consts.days:if(isSameDate(e,t,consts.months))return;break;case consts.months:if(isSameDate(e,t,consts.years))return;break;case consts.years:if(s[0]===i[0]&&s[1]===i[1])return}this.render()}};render=()=>{this.destroyCells(),this._generateCells(),this.cells.forEach(e=>{this.$cells.appendChild(e.render())})}}class DatepickerCell{constructor({type:e,date:t,dp:s,opts:i,body:a}={}){this.type=e,this.singleType=this.type.slice(0,-1),this.date=t,this.dp=s,this.opts=i,this.body=a,this.customData=!1,this.init()}init(){var{range:e,onRenderCell:t}=this.opts;t&&(this.customData=t({date:this.date,cellType:this.singleType,datepicker:this.dp})),this._createElement(),this._bindDatepickerEvents(),this._handleInitialFocusStatus(),this.dp.hasSelectedDates&&(this._handleSelectedStatus(),e)&&this._handleRangeStatus()}_bindDatepickerEvents(){this.dp.on(consts.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.on(consts.eventChangeFocusDate,this.onChangeFocusDate)}unbindDatepickerEvents(){this.dp.off(consts.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.off(consts.eventChangeFocusDate,this.onChangeFocusDate)}_createElement(){var{year:e,month:t,date:s}=getParsedDate(this.date);this.$cell=createElement({className:this._getClassName(),attrs:{"data-year":e,"data-month":t,"notification-cell":s}})}_getClassName(){var e=new Date,{selectOtherMonths:t,selectOtherYears:s}=this.opts,{minDate:i,maxDate:a}=this.dp,r=getParsedDate(this.date)["day"],n=this._isOutOfMinMaxRange(),o=this.customData?.disabled,e=classNames("air-datepicker-cell",`-${this.singleType}-`,{"-current-":isSameDate(e,this.date,this.type),"-min-date-":i&&isSameDate(i,this.date,this.type),"-max-date-":a&&isSameDate(a,this.date,this.type)});let h="";switch(this.type){case consts.days:h=classNames({"-weekend-":this.dp.isWeekend(r),"-other-month-":this.isOtherMonth,"-disabled-":this.isOtherMonth&&!t||n||o});break;case consts.months:h=classNames({"-disabled-":n||o});break;case consts.years:h=classNames({"-other-decade-":this.isOtherDecade,"-disabled-":n||this.isOtherDecade&&!s||o})}return classNames(e,h,this.customData?.classes)}_getHtml(){var{year:e,month:t,date:s}=getParsedDate(this.date),{showOtherMonths:i,showOtherYears:a}=this.opts;if(this.customData?.html)return this.customData.html;switch(this.type){case consts.days:return!i&&this.isOtherMonth?"":s;case consts.months:return this.dp.locale[this.opts.monthsField][t];case consts.years:return!a&&this.isOtherDecade?"":e}}_isOutOfMinMaxRange(){var{minDate:e,maxDate:t}=this.dp,{type:s,date:i}=this,{month:i,year:a,date:r}=getParsedDate(i),n=s===consts.days,s=s===consts.years,o=!!e&&new Date(a,s?e.getMonth():i,n?r:e.getDate()),a=!!t&&new Date(a,s?t.getMonth():i,n?r:t.getDate());return e&&t?isDateSmaller(o,e)||isDateBigger(a,t):e?isDateSmaller(o,e):t?isDateBigger(a,t):void 0}destroy(){this.unbindDatepickerEvents()}focus=()=>{this.$cell.classList.add("-focus-"),this.focused=!0};removeFocus=()=>{this.$cell.classList.remove("-focus-"),this.focused=!1};select=()=>{this.$cell.classList.add("-selected-"),this.selected=!0};removeSelect=()=>{this.$cell.classList.remove("-selected-","-range-from-","-range-to-"),this.selected=!1};_handleRangeStatus(){var{rangeDateFrom:e,rangeDateTo:t}=this.dp,e=classNames({"-in-range-":e&&t&&isDateBetween(this.date,e,t),"-range-from-":e&&isSameDate(this.date,e,this.type),"-range-to-":t&&isSameDate(this.date,t,this.type)});this.$cell.classList.remove("-range-from-","-range-to-","-in-range-"),e&&this.$cell.classList.add(...e.split(" "))}_handleSelectedStatus(){var e=this.dp._checkIfDateIsSelected(this.date,this.type);e?this.select():!e&&this.selected&&this.removeSelect()}_handleInitialFocusStatus(){isSameDate(this.dp.focusDate,this.date,this.type)&&this.focus()}get isDisabled(){return this.$cell.matches("-disabled-")}get isOtherMonth(){return this.dp.isOtherMonth(this.date)}get isOtherDecade(){return this.dp.isOtherDecade(this.date)}onChangeSelectedDate=()=>{this.isDisabled||(this._handleSelectedStatus(),this.opts.range&&this._handleRangeStatus())};onChangeFocusDate=e=>{e?((e=isSameDate(e,this.date,this.type))?this.focus():!e&&this.focused&&this.removeFocus(),this.opts.range&&this._handleRangeStatus()):this.focused&&this.removeFocus()};render=()=>(this.$cell.innerHTML=this._getHtml(),(this.$cell.adpCell=this).$cell)}class DatepickerKeyboard{pressedKeys=new Set;hotKeys=new Map([[[["Control","ArrowRight"],["Control","ArrowUp"]],e=>e.month++],[[["Control","ArrowLeft"],["Control","ArrowDown"]],e=>e.month--],[[["Shift","ArrowRight"],["Shift","ArrowUp"]],e=>e.year++],[[["Shift","ArrowLeft"],["Shift","ArrowDown"]],e=>e.year--],[[["Alt","ArrowRight"],["Alt","ArrowUp"]],e=>e.year+=10],[[["Alt","ArrowLeft"],["Alt","ArrowDown"]],e=>e.year-=10],[["Control","Shift","ArrowUp"],(e,t)=>t.up()]]);constructor({dp:e,opts:t}){this.dp=e,this.opts=t,this.init()}init(){this.bindKeyboardEvents()}bindKeyboardEvents(){var e=this.dp["$el"];e.addEventListener("keydown",this.onKeyDown),e.addEventListener("keyup",this.onKeyUp)}destroy(){var e=this.dp["$el"];e.removeEventListener("keydown",this.onKeyDown),e.removeEventListener("keyup",this.onKeyUp),this.hotKeys=null,this.pressedKeys=null}getInitialFocusDate(){var{focusDate:e,currentView:t,selectedDates:s,parsedViewDate:{year:i,month:a}}=this.dp;let r=e||s[s.length-1];if(!r)switch(t){case consts.days:r=new Date(i,a,(new Date).getDate());break;case consts.months:r=new Date(i,a,1);break;case consts.years:r=new Date(i,0,1)}return r}focusNextCell(e){let t=this.getInitialFocusDate(),s=this.dp["currentView"],{days:i,months:a,years:r}=consts,n=getParsedDate(t),o=n.year,h=n.month,d=n.date;switch(e){case"ArrowLeft":s===i&&--d,s===a&&--h,s===r&&--o;break;case"ArrowUp":s===i&&(d-=7),s===a&&(h-=3),s===r&&(o-=4);break;case"ArrowRight":s===i&&(d+=1),s===a&&(h+=1),s===r&&(o+=1);break;case"ArrowDown":s===i&&(d+=7),s===a&&(h+=3),s===r&&(o+=4)}e=this.dp.getClampedDate(new Date(o,h,d));this.dp.setFocusDate(e,{viewDateTransition:!0})}registerKey(e){this.pressedKeys.add(e)}removeKey(e){this.pressedKeys.delete(e)}handleHotKey=e=>{var e=this.hotKeys.get(e),t=getParsedDate(this.getInitialFocusDate());e(t,this.dp);let{year:s,month:i,date:a}=t;e=getDaysCount(new Date(s,i)),e<a&&(a=e),t=this.dp.getClampedDate(new Date(s,i,a));this.dp.setFocusDate(t,{viewDateTransition:!0})};isHotKeyPressed=()=>{let s=!1,i=this.pressedKeys.size,a=e=>this.pressedKeys.has(e);for(let[t]of this.hotKeys){if(s)break;Array.isArray(t[0])?t.forEach(e=>{s||i!==e.length||(s=e.every(a)&&t)}):i===t.length&&(s=t.every(a)&&t)}return s};isArrow=e=>37<=e&&e<=40;onKeyDown=e=>{var{key:t,which:s}=e,{dp:i,dp:{focusDate:a},opts:r}=this,n=(this.registerKey(t),this.isHotKeyPressed());if(n)e.preventDefault(),this.handleHotKey(n);else if(this.isArrow(s))e.preventDefault(),this.focusNextCell(t);else{if("Enter"===t){if(i.currentView!==r.minView)return void i.down();if(a)return void((n=i._checkIfDateIsSelected(a))?i._handleAlreadySelectedDates(n,a):i.selectDate(a))}"Escape"===t&&this.dp.hide()}};onKeyUp=e=>{this.removeKey(e.key)}}class DatepickerNav{constructor({dp:e,opts:t}){this.dp=e,this.opts=t,this.init()}init(){this._createElement(),this._buildBaseHtml(),this._defineDOM(),this.render(),this.handleNavStatus(),this._bindEvents(),this._bindDatepickerEvents()}_defineDOM(){this.$title=getEl(".air-datepicker-nav--title",this.$el),this.$prev=getEl('[data-action="prev"]',this.$el),this.$next=getEl('[data-action="next"]',this.$el)}_bindEvents(){this.$el.addEventListener("click",this.onClickNav),this.$title.addEventListener("click",this.onClickNavTitle)}_bindDatepickerEvents(){this.dp.on(consts.eventChangeViewDate,this.onChangeViewDate),this.dp.on(consts.eventChangeCurrentView,this.onChangeCurrentView),this.isNavIsFunction&&(this.dp.on(consts.eventChangeSelectedDate,this.renderDelay),this.dp.opts.timepicker)&&this.dp.on(consts.eventChangeTime,this.render)}destroy(){this.dp.off(consts.eventChangeViewDate,this.onChangeViewDate),this.dp.off(consts.eventChangeCurrentView,this.onChangeCurrentView),this.isNavIsFunction&&(this.dp.off(consts.eventChangeSelectedDate,this.renderDelay),this.dp.opts.timepicker)&&this.dp.off(consts.eventChangeTime,this.render)}_createElement(){this.$el=createElement({tagName:"nav",className:"air-datepicker-nav"})}_getTitle(){var{dp:e,opts:t}=this,t=t.navTitles[e.currentView];return"function"==typeof t?t(e):e.formatDate(e.viewDate,t)}handleNavStatus(){var e=this.opts["disableNavWhenOutOfRange"],{minDate:t,maxDate:s}=this.dp;if((t||s)&&e){var{year:i,month:a}=this.dp.parsedViewDate,r=!!t&&getParsedDate(t),n=!!s&&getParsedDate(s);switch(this.dp.currentView){case consts.days:t&&r.month>=a&&r.year>=i&&this._disableNav("prev"),s&&n.month<=a&&n.year<=i&&this._disableNav("next");break;case consts.months:t&&r.year>=i&&this._disableNav("prev"),s&&n.year<=i&&this._disableNav("next");break;case consts.years:var o=getDecade(this.dp.viewDate);t&&r.year>=o[0]&&this._disableNav("prev"),s&&n.year<=o[1]&&this._disableNav("next")}}}_disableNav(e){getEl('[data-action="'+e+'"]',this.$el).classList.add("-disabled-")}_resetNavStatus(){removeClass(this.$el.querySelectorAll(".air-datepicker-nav--action"),"-disabled-")}onClickNav=e=>{var e=closest(e.target,".air-datepicker-nav--action");e&&(e=e.dataset.action,this.dp[e]())};onChangeViewDate=()=>{this.render(),this._resetNavStatus(),this.handleNavStatus()};onChangeCurrentView=()=>{this.render(),this._resetNavStatus(),this.handleNavStatus()};onClickNavTitle=()=>{this.dp.isFinalView||this.dp.up()};_buildBaseHtml(){var{prevHtml:e,nextHtml:t}=this.opts;this.$el.innerHTML=`<div class="air-datepicker-nav--action" data-action="prev">${e}</div>`+'<div class="air-datepicker-nav--title"></div>'+`<div class="air-datepicker-nav--action" data-action="next">${t}</div>`}get isNavIsFunction(){let t=this.opts["navTitles"];return Object.keys(t).find(e=>"function"==typeof t[e])}update=()=>{var{prevHtml:e,nextHtml:t}=this.opts;this.$prev.innerHTML=e,this.$next.innerHTML=t,this._resetNavStatus(),this.render(),this.handleNavStatus()};renderDelay=()=>{setTimeout(this.render)};render=()=>{this.$title.innerHTML=this._getTitle(),toggleClass(this.$title,{"-disabled-":this.dp.isFinalView})}}class DatepickerTime{constructor({opts:e,dp:t}={}){this.opts=e,this.dp=t;e=this.dp.locale.timeFormat;e&&(e.match(getWordBoundaryRegExp("h"))||e.match(getWordBoundaryRegExp("hh")))&&(this.ampm=!0),this.init()}init(){this.setTime(this.dp.lastSelectedDate||this.dp.viewDate),this.createElement(),this.buildHtml(),this.defineDOM(),this.render(),this.bindDatepickerEvents(),this.bindDOMEvents()}bindDatepickerEvents(){this.dp.on(consts.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.on(consts.eventChangeLastSelectedDate,this.onChangeLastSelectedDate)}bindDOMEvents(){let e="input";navigator.userAgent.match(/trident/gi)&&(e="change"),addEventListener(this.$ranges,e,this.onChangeInputRange),addEventListener(this.$ranges,"mouseenter",this.onMouseEnterLeave),addEventListener(this.$ranges,"mouseleave",this.onMouseEnterLeave),addEventListener(this.$ranges,"focus",this.onFocus),addEventListener(this.$ranges,"mousedown",this.onFocus),addEventListener(this.$ranges,"blur",this.onBlur)}createElement(){this.$el=createElement({className:classNames("air-datepicker-time",{"-am-pm-":this.dp.ampm})})}destroy(){this.dp.off(consts.eventChangeSelectedDate,this.onChangeSelectedDate),this.dp.off(consts.eventChangeLastSelectedDate,this.onChangeLastSelectedDate),this.$el.parentNode.removeChild(this.$el)}buildHtml(){var{ampm:e,hours:t,displayHours:s,minutes:i,minHours:a,minMinutes:r,maxHours:n,maxMinutes:o,dayPeriod:h,opts:{hoursStep:d,minutesStep:l}}=this;this.$el.innerHTML='<div class="air-datepicker-time--current">'+`   <span class="air-datepicker-time--current-hours">${getLeadingZeroNum(s)}</span>`+'   <span class="air-datepicker-time--current-colon">:</span>'+`   <span class="air-datepicker-time--current-minutes">${getLeadingZeroNum(i)}</span>`+"   "+(e?`<span class='air-datepicker-time--current-ampm'>${h}</span>`:"")+'</div><div class="air-datepicker-time--sliders">   <div class="air-datepicker-time--row">'+`      <input type="range" name="hours" value="${t}" min="${a}" max="${n}" step="${d}"/>`+'   </div>   <div class="air-datepicker-time--row">'+`      <input type="range" name="minutes" value="${i}" min="${r}" max="${o}" step="${l}"/>`+"   </div></div>"}defineDOM(){var e=e=>getEl(e,this.$el);this.$ranges=this.$el.querySelectorAll('[type="range"]'),this.$hours=e('[name="hours"]'),this.$minutes=e('[name="minutes"]'),this.$hoursText=e(".air-datepicker-time--current-hours"),this.$minutesText=e(".air-datepicker-time--current-minutes"),this.$ampm=e(".air-datepicker-time--current-ampm")}setTime(e){this.setMinMaxTime(e),this.setCurrentTime(e)}addTimeToDate(e){e&&(e.setHours(this.hours),e.setMinutes(this.minutes))}setMinMaxTime(e){var t,s;this.setMinMaxTimeFromOptions(),e&&({minDate:t,maxDate:s}=this.dp,t&&isSameDate(e,t)&&this.setMinTimeFromMinDate(t),s)&&isSameDate(e,s)&&this.setMaxTimeFromMaxDate(s)}setCurrentTime(e){var{hours:e,minutes:t}=e?getParsedDate(e):this;this.hours=clamp(e,this.minHours,this.maxHours),this.minutes=clamp(t,this.minMinutes,this.maxMinutes)}setMinMaxTimeFromOptions(){var{minHours:e,minMinutes:t,maxHours:s,maxMinutes:i}=this.opts;this.minHours=clamp(e,0,23),this.minMinutes=clamp(t,0,59),this.maxHours=clamp(s,0,23),this.maxMinutes=clamp(i,0,59)}setMinTimeFromMinDate(e){var t=this.dp["lastSelectedDate"];this.minHours=e.getHours(),t&&t.getHours()>e.getHours()?this.minMinutes=this.opts.minMinutes:this.minMinutes=e.getMinutes()}setMaxTimeFromMaxDate(e){var t=this.dp["lastSelectedDate"];this.maxHours=e.getHours(),t&&t.getHours()<e.getHours()?this.maxMinutes=this.opts.maxMinutes:this.maxMinutes=e.getMinutes()}getDayPeriod(e,t){let s,i=Number(e),a=(e instanceof Date&&(s=getParsedDate(e),i=Number(s.hours)),t||this.ampm),r="am";if(a){switch(!0){case 12===i:case 11<i:r="pm"}i=i%12==0?12:i%12}return{hours:i,dayPeriod:r}}updateSliders(){setAttribute(this.$hours,{min:this.minHours,max:this.maxHours}).value=this.hours,setAttribute(this.$minutes,{min:this.minMinutes,max:this.maxMinutes}).value=this.minutes}updateText(){this.$hoursText.innerHTML=getLeadingZeroNum(this.displayHours),this.$minutesText.innerHTML=getLeadingZeroNum(this.minutes),this.ampm&&(this.$ampm.innerHTML=this.dayPeriod)}toggleTimepickerIsActive=e=>{this.dp.timepickerIsActive=e};onChangeSelectedDate=({date:e,updateTime:t=!1})=>{e&&(this.setMinMaxTime(e),this.setCurrentTime(!!t&&e),this.addTimeToDate(e))};onChangeLastSelectedDate=e=>{e&&(this.setTime(e),this.render())};onChangeInputRange=e=>{e=e.target;this[e.getAttribute("name")]=e.value,this.updateText(),this.dp.trigger(consts.eventChangeTime,{hours:this.hours,minutes:this.minutes})};onMouseEnterLeave=e=>{let t=e.target.getAttribute("name"),s=this.$minutesText;(s="hours"===t?this.$hoursText:s).classList.toggle("-focus-")};onFocus=()=>{this.toggleTimepickerIsActive(!0)};onBlur=()=>{this.toggleTimepickerIsActive(!1)};set hours(e){this._hours=e;var{hours:e,dayPeriod:t}=this.getDayPeriod(e);this.displayHours=e,this.dayPeriod=t}get hours(){return this._hours}render(){this.updateSliders(),this.updateText()}}let $body="",$datepickersContainer="",$datepickerOverlay="",containerBuilt=!1,baseTemplate='<i class="air-datepicker--pointer"></i><div class="air-datepicker--navigation"></div><div class="air-datepicker--content"></div>';function buildDatepickersContainer(e){return containerBuilt=!0,$datepickersContainer=createElement({className:e,id:e}),$body.appendChild($datepickersContainer),$datepickersContainer}class Datepicker{static defaults=defaults;static version="3.2.0";static defaultContainerId="air-datepicker-global-container";viewIndexes=[consts.days,consts.months,consts.years];constructor(e,t){this.$el=getEl(e),this.$el&&(this.$datepicker=createElement({className:"air-datepicker"}),this.opts=deepMerge({},defaults,t),this.$customContainer=!!this.opts.container&&getEl(this.opts.container),this.$altField=getEl(this.opts.altField||!1),$body=$body||getEl("body"),{view:e,startDate:t}=this.opts,t||(this.opts.startDate=new Date),"INPUT"===this.$el.nodeName&&(this.elIsInput=!0),this.inited=!1,this.visible=!1,this.viewDate=createDate(this.opts.startDate),this.focusDate=!1,this.initialReadonly=this.$el.getAttribute("readonly"),this.customHide=!1,this.currentView=e,this.selectedDates=[],this.views={},this.keys=[],this.rangeDateFrom="",this.rangeDateTo="",this.timepickerIsActive=!1,this.treatAsInline=this.opts.inline||!this.elIsInput,this.init())}get shouldUpdateDOM(){return this.visible||this.treatAsInline}get parsedViewDate(){return getParsedDate(this.viewDate)}get currentViewSingular(){return this.currentView.slice(0,-1)}get curDecade(){return getDecade(this.viewDate)}get viewIndex(){return this.viewIndexes.indexOf(this.currentView)}get isFinalView(){return this.currentView===consts.years}get hasSelectedDates(){return 0<this.selectedDates.length}get isMinViewReached(){return this.currentView===this.opts.minView||this.currentView===consts.days}get $container(){return this.$customContainer||$datepickersContainer}static withReminders=({reminders:e=[],date:t,cellType:s}={})=>{var i="day"===s;const a=t.getDate(),r=t.getMonth(),n=t.getFullYear();t=i&&e.find(e=>e.date===a&&e.month===r&&e.year===n);return"day"!==s?{html:!1,classes:!1}:{html:`
                      <span class="">${a}</span> 
                      <div class="datepicker-reminder">
                      <span class="${t?t.class:""} a-self-baseline"></span>
                          </div> `,classes:!!t&&"-notification-cell-"}};static getLanguage=(e=0)=>{var t={days:["Domingo","Lunes","Martes","Miércoles","Jueves","Viernes","Sabado"],daysShort:["Dom","Lun","Mar","Mie","Jue","Vie","Sab"],daysMin:["D","L","M","M","J","V","S"],months:["Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"],monthsShort:["Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"],today:"Today",clear:"Clear",dateFormat:"dd/MM/yyyy",timeFormat:"hh:mm aa",firstDay:0};return t};static replacer=(e,t,a)=>e.replace(t,function(e,t,s,i){return t+a+i});init=()=>{var{opts:e,treatAsInline:t,opts:{inline:s,isMobile:i,selectedDates:a,keyboardNav:r,onlyTimepicker:n}}=this;containerBuilt||s||!this.elIsInput||buildDatepickersContainer(Datepicker.defaultContainerId),!i||$datepickerOverlay||t||this._createMobileOverlay(),this._handleLocale(),this._bindSubEvents(),this._createMinMaxDates(),this._limitViewDateByMaxMinDates(),this.elIsInput&&(s||this._bindEvents(),r)&&!n&&(this.keyboardNav=new DatepickerKeyboard({dp:this,opts:e})),a&&this.selectDate(a,{silent:!0}),this.opts.visible&&!t&&this.show(),i&&!t&&this.$el.setAttribute("readonly",!0),t&&this._createComponents()};_createMobileOverlay=()=>{$datepickerOverlay=createElement({className:"air-datepicker-overlay"}),$datepickersContainer.appendChild($datepickerOverlay)};_closeButton=({container:e})=>{var{opts:{showCLoseButton:t=!1}}=this,s=document.createElement("button");s.classList.add("position-relative","icons","c-black","x-block-before","icons-2xl","close-btn"+(t?"-show":"-hidden")),e.appendChild(s),s.addEventListener("click",e=>{$datepickerOverlay.click()})};_createComponents=()=>{var{opts:e,treatAsInline:t,opts:{inline:s,buttons:i,timepicker:a,position:r,classes:n,onlyTimepicker:o,isMobile:h}}=this;this._buildBaseHtml(),this.elIsInput&&!s&&this._setPositionClasses(r),!s&&this.elIsInput||this.$datepicker.classList.add("-inline-"),n&&this.$datepicker.classList.add(...n.split(" ")),o&&this.$datepicker.classList.add("-only-timepicker-"),h&&!t&&this._addMobileAttributes(),this.views[this.currentView]=new DatepickerBody({dp:this,type:this.currentView,opts:e}),this.nav=new DatepickerNav({dp:this,opts:e}),a&&this._addTimepicker(),i&&this._addButtons(),this.$content.appendChild(this.views[this.currentView].$el),this.$nav.appendChild(this.nav.$el)};_destroyComponents=()=>{for(var e in this.views)this.views[e].destroy();this.views={},this.nav.destroy(),this.timepicker&&this.timepicker.destroy()};_addMobileAttributes=()=>{$datepickerOverlay.addEventListener("click",this._onClickOverlay),this.$datepicker.classList.add("-is-mobile-"),this.$el.setAttribute("readonly",!0)};_removeMobileAttributes=()=>{$datepickerOverlay.removeEventListener("click",this._onClickOverlay),this.$datepicker.classList.remove("-is-mobile-"),this.initialReadonly||""===this.initialReadonly||this.$el.removeAttribute("readonly")};_createMinMaxDates=()=>{var{minDate:e,maxDate:t}=this.opts;this.minDate=!!e&&createDate(e),this.maxDate=!!t&&createDate(t)};_addTimepicker=()=>{this.$timepicker=createElement({className:"air-datepicker--time"}),this.$datepicker.appendChild(this.$timepicker),this.timepicker=new DatepickerTime({dp:this,opts:this.opts}),this.$timepicker.appendChild(this.timepicker.$el)};_addButtons=()=>{this.$buttons=createElement({className:"air-datepicker--buttons"}),this.$datepicker.appendChild(this.$buttons),this.buttons=new DatepickerButtons({dp:this,opts:this.opts}),this.$buttons.appendChild(this.buttons.$el)};_bindSubEvents=()=>{this.on(consts.eventChangeSelectedDate,this._onChangeSelectedDate),this.on(consts.eventChangeFocusDate,this._onChangeFocusedDate),this.on(consts.eventChangeTime,this._onChangeTime)};_buildBaseHtml=()=>{var e=this.opts["inline"];this.elIsInput?e?insertAfter(this.$datepicker,this.$el):this.$container.appendChild(this.$datepicker):this.$el.appendChild(this.$datepicker),this.$datepicker.innerHTML=baseTemplate,this.$content=getEl(".air-datepicker--content",this.$datepicker),this.$pointer=getEl(".air-datepicker--pointer",this.$datepicker),this.$nav=getEl(".air-datepicker--navigation",this.$datepicker),this._closeButton({container:this.$datepicker})};_handleLocale=()=>{var{locale:e,dateFormat:t,firstDay:s,timepicker:i,onlyTimepicker:a,timeFormat:r,dateTimeSeparator:n}=this.opts,e=(this.locale=deepCopy(e),t&&(this.locale.dateFormat=t),void 0!==r&&""!==r&&(this.locale.timeFormat=r),this.locale)["timeFormat"];""!==s&&(this.locale.firstDay=s),i&&"function"!=typeof t&&(this.locale.dateFormat=[this.locale.dateFormat,e||""].join(e?n:"")),a&&(this.locale.dateFormat=this.locale.timeFormat)};_setPositionClasses=e=>{var t;"function"==typeof e?this.$datepicker.classList.add("-custom-position-"):(e=`air-datepicker -${t=(e=e.split(" "))[0]}-${e[1]}- -from-${t}-`,this.$datepicker.classList.add(...e.split(" ")))};_bindEvents=()=>{this.$el.addEventListener(this.opts.showEvent,this._onFocus),this.$el.addEventListener("blur",this._onBlur),this.$datepicker.addEventListener("mousedown",this._onMouseDown),this.$datepicker.addEventListener("mouseup",this._onMouseUp),window.addEventListener("resize",this._onResize)};_limitViewDateByMaxMinDates=()=>{var{viewDate:e,minDate:t,maxDate:s}=this;s&&isDateBigger(e,s)&&this.setViewDate(s),t&&isDateSmaller(e,t)&&this.setViewDate(t)};formatDate=(n=this.viewDate,o)=>{if((n=createDate(n))instanceof Date){let e=o,t=this.locale,s=getParsedDate(n),i=getDecade(n),a=Datepicker.replacer,r="am";this.opts.timepicker&&this.timepicker&&(r=this.timepicker.getDayPeriod(n).dayPeriod);var h,d,o={T:n.getTime(),m:s.minutes,mm:s.fullMinutes,h:s.hours12,hh:s.fullHours12,H:s.hours,HH:s.fullHours,aa:r,AA:r.toUpperCase(),E:t.daysShort[s.day],EEEE:t.days[s.day],d:s.date,dd:s.fullDate,M:s.month+1,MM:s.fullMonth,MMM:t.monthsShort[s.month],MMMM:t.months[s.month],yy:s.year.toString().slice(-2),yyyy:s.year,yyyy1:i[0],yyyy2:i[1]};for([h,d]of Object.entries(o))e=a(e,getWordBoundaryRegExp(h),d);return e}};next=()=>{var{year:e,month:t}=this.parsedViewDate;switch(this.currentView){case consts.days:this.setViewDate(new Date(e,t+1,1));break;case consts.months:this.setViewDate(new Date(e+1,t,1));break;case consts.years:this.setViewDate(new Date(e+10,0,1))}};prev=()=>{var{year:e,month:t}=this.parsedViewDate;switch(this.currentView){case consts.days:this.setViewDate(new Date(e,t-1,1));break;case consts.months:this.setViewDate(new Date(e-1,t,1));break;case consts.years:this.setViewDate(new Date(e-10,0,1))}};down=e=>{this._handleUpDownActions(e,"down")};up=e=>{this._handleUpDownActions(e,"up")};selectDate=(e,t={})=>{var{currentView:s,parsedViewDate:i,selectedDates:a}=this,r=t["updateTime"],{moveToOtherMonthsOnSelect:n,moveToOtherYearsOnSelect:o,multipleDates:h,range:d,autoClose:l}=this.opts,c=a.length;let u;if(Array.isArray(e))return e.forEach(e=>{this.selectDate(e,t)}),new Promise(e=>{setTimeout(e)});if((e=createDate(e))instanceof Date){if(s===consts.days&&e.getMonth()!==i.month&&n&&(u=new Date(e.getFullYear(),e.getMonth(),1)),(u=s===consts.years&&e.getFullYear()!==i.year&&o?new Date(e.getFullYear(),0,1):u)&&this.setViewDate(u),h&&!d){if(c===h)return;this._checkIfDateIsSelected(e)||a.push(e)}else if(d)switch(c){case 1:a.push(e),this.rangeDateTo||(this.rangeDateTo=e),isDateBigger(this.rangeDateFrom,this.rangeDateTo)&&(this.rangeDateTo=this.rangeDateFrom,this.rangeDateFrom=e),this.selectedDates=[this.rangeDateFrom,this.rangeDateTo];break;case 2:this.selectedDates=[e],this.rangeDateFrom=e,this.rangeDateTo="";break;default:this.selectedDates=[e],this.rangeDateFrom=e}else this.selectedDates=[e];return this.trigger(consts.eventChangeSelectedDate,{action:consts.actionSelectDate,silent:t?.silent,date:e,updateTime:r}),this._updateLastSelectedDate(e),l&&!this.timepickerIsActive&&this.visible&&(!h&&!d||d&&1===c)&&this.hide(),new Promise(e=>{setTimeout(e)})}};unselectDate=s=>{let i=this.selectedDates,a=this;if((s=createDate(s))instanceof Date)return i.some((e,t)=>{if(isSameDate(e,s))return i.splice(t,1),a.selectedDates.length?a._updateLastSelectedDate(a.selectedDates[a.selectedDates.length-1]):(a.rangeDateFrom="",a.rangeDateTo="",a._updateLastSelectedDate(!1)),this.trigger(consts.eventChangeSelectedDate,{action:consts.actionUnselectDate,date:s}),!0})};replaceDate=(t,e)=>{var s=this.selectedDates.find(e=>isSameDate(e,t,this.currentView)),s=this.selectedDates.indexOf(s);s<0||isSameDate(this.selectedDates[s],e,this.currentView)||(this.selectedDates[s]=e,this.trigger(consts.eventChangeSelectedDate,{action:consts.actionSelectDate,date:e,updateTime:!0}),this._updateLastSelectedDate(e))};clear=(e={})=>(this.selectedDates=[],this.rangeDateFrom=!1,this.rangeDateTo=!1,this.trigger(consts.eventChangeSelectedDate,{action:consts.actionUnselectDate,silent:e.silent}),new Promise(e=>{setTimeout(e)}));show=()=>{var{onShow:e,isMobile:t}=this.opts;this._cancelScheduledCall(),this.visible||this.hideAnimation||this._createComponents(),this.setPosition(this.opts.position),this.$datepicker.classList.add("-active-"),this.visible=!0,e&&this._scheduleCallAfterTransition(e),t&&this._showMobileOverlay()};hide=()=>{let{onHide:t,isMobile:e}=this.opts,s=this._hasTransition();this.visible=!1,this.hideAnimation=!0,this.$datepicker.classList.remove("-active-"),this.customHide&&this.customHide(),this.elIsInput&&this.$el.blur(),this._scheduleCallAfterTransition(e=>{!this.customHide&&(e&&s||!e&&!s)&&this._finishHide(),t&&t(e)}),e&&$datepickerOverlay.classList.remove("-active-")};_finishHide=()=>{this.hideAnimation=!1,this._destroyComponents(),this.$container.removeChild(this.$datepicker)};setPosition=(m,p=!1)=>{if("function"==typeof(m=m||this.opts.position))this.customHide=m({$datepicker:this.$datepicker,$target:this.$el,$pointer:this.$pointer,isViewChange:p,done:this._finishHide});else{p=this.opts["isMobile"];let e=this.$el.getBoundingClientRect(),t=this.$el.getBoundingClientRect(),s=this.$datepicker.offsetParent,i=this.$el.offsetParent,a=this.$datepicker.getBoundingClientRect(),r=m.split(" "),n,o,h=window.scrollY,d=window.scrollX,l=this.opts.offset,c=r[0],u=r[1];if(p)this.$datepicker.style.cssText="left: 50%; top: 50%";else{switch(s===i&&s!==document.body&&(t={top:this.$el.offsetTop,left:this.$el.offsetLeft,width:e.width,height:this.$el.offsetHeight},h=0,d=0),s!==i&&s!==document.body&&(m=s.getBoundingClientRect(),t={top:e.top-m.top,left:e.left-m.left,width:e.width,height:e.height},h=0,d=0),c){case"top":n=t.top-a.height-l;break;case"right":o=t.left+t.width+l;break;case"bottom":n=t.top+t.height+l;break;case"left":o=t.left-a.width-l}switch(u){case"top":n=t.top;break;case"right":o=t.left+t.width-a.width;break;case"bottom":n=t.top+t.height-a.height;break;case"left":o=t.left;break;case"center":/left|right/.test(c)?n=t.top+t.height/2-a.height/2:o=t.left+t.width/2-a.width/2}this.$datepicker.style.cssText=`left: ${o+d}px; top: ${n+h}px`}}};_setInputValue=()=>{var{opts:e,$altField:t,locale:{dateFormat:s}}=this,{altFieldDateFormat:e,altField:i}=e;i&&t&&(t.value=this._getInputValue(e)),this.$el.value=this._getInputValue(s)};_getInputValue=t=>{var{selectedDates:e,opts:s}=this,{multipleDates:s,multipleDatesSeparator:i}=s;if(!e.length)return"";var a="function"==typeof t;let r=a?t(s?e:e[0]):e.map(e=>this.formatDate(e,t));return r=a?r:r.join(i)};_triggerOnSelect=()=>{let e=[],t=[],{selectedDates:s,locale:i,opts:{onSelect:a,multipleDates:r,range:n}}=this,o=r||n,h="function"==typeof i.dateFormat;s.length&&(e=s.map(copyDate),t=h?r?i.dateFormat(e):e.map(e=>i.dateFormat(e)):e.map(e=>this.formatDate(e,i.dateFormat))),a({date:o?e:e[0],formattedDate:o?t:t[0],datepicker:this})};_checkIfDateIsSelected=(s,i=consts.days)=>{let a=!1;return this.selectedDates.some(e=>{var t=isSameDate(s,e,i);return a=t&&e,t}),a};_handleAlreadySelectedDates=(e,t)=>{var{range:s,toggleSelected:i}=this.opts;s?i?this.unselectDate(t):2!==this.selectedDates.length&&this.selectDate(t):i&&this.unselectDate(t),i||this._updateLastSelectedDate(e)};_handleUpDownActions=(t,s)=>{if((t=createDate(t||this.focusDate||this.viewDate))instanceof Date){let e="up"===s?this.viewIndex+1:this.viewIndex-1;(e=2<e?2:e)<0&&(e=0),this.setViewDate(new Date(t.getFullYear(),t.getMonth(),1)),this.setCurrentView(this.viewIndexes[e])}};_handleRangeOnFocus=()=>{1===this.selectedDates.length&&(isDateBigger(this.selectedDates[0],this.focusDate)?(this.rangeDateTo=this.selectedDates[0],this.rangeDateFrom=this.focusDate):(this.rangeDateTo=this.focusDate,this.rangeDateFrom=this.selectedDates[0]))};_scheduleCallAfterTransition=e=>{this._cancelScheduledCall(),e&&e(!1),this._onTransitionEnd=()=>{e&&e(!0)},this.$datepicker.addEventListener("transitionend",this._onTransitionEnd,{once:!0})};_cancelScheduledCall=()=>{this.$datepicker.removeEventListener("transitionend",this._onTransitionEnd)};setViewDate=e=>{var t,s,i,a;(e=createDate(e))instanceof Date&&(isSameDate(e,this.viewDate)||(t=this.viewDate,s=(this.viewDate=e,this.opts)["onChangeViewDate"],s&&({month:i,year:a}=this.parsedViewDate,s({month:i,year:a,decade:this.curDecade})),this.trigger(consts.eventChangeViewDate,e,t)))};setFocusDate=(e,t={})=>{(!e||(e=createDate(e))instanceof Date)&&(this.focusDate=e,this.opts.range&&e&&this._handleRangeOnFocus(),this.trigger(consts.eventChangeFocusDate,e,t))};setCurrentView=e=>{var t;this.viewIndexes.includes(e)&&(this.currentView=e,this.elIsInput&&this.visible&&this.setPosition(void 0,!0),this.trigger(consts.eventChangeCurrentView,e),this.views[e]||(t=this.views[e]=new DatepickerBody({dp:this,opts:this.opts,type:e}),this.shouldUpdateDOM&&this.$content.appendChild(t.$el)),this.opts.onChangeView)&&this.opts.onChangeView(e)};_updateLastSelectedDate=e=>{this.lastSelectedDate=e,this.trigger(consts.eventChangeLastSelectedDate,e)};getCell=(e,t=consts.day)=>{var s,i;if((e=createDate(e))instanceof Date)return{year:e,month:s,date:i}=getParsedDate(e),e=`[data-year="${e}"]`,s=`[data-month="${s}"]`,i=`[data-date="${i}"]`,i={[consts.day]:e+s+i,[consts.month]:e+s,[consts.year]:e},this.views[this.currentView].$el.querySelector(i[t])};destroy=()=>{var{showEvent:e,isMobile:t}=this.opts,s=this.$datepicker.parentNode;s&&s.removeChild(this.$datepicker),this.$el.removeEventListener(e,this._onFocus),this.$el.removeEventListener("blur",this._onBlur),window.removeEventListener("resize",this._onResize),t&&this._removeMobileAttributes(),this.keyboardNav&&this.keyboardNav.destroy(),this.views=null,this.nav=null,this.$datepicker=null,this.opts=null,this.$customContainer=null,this.viewDate=null,this.focusDate=null,this.selectedDates=null,this.rangeDateFrom=null,this.rangeDateTo=null};update=e=>{var t=deepMerge({},this.opts),{timepicker:s,buttons:i,range:a,selectedDates:r,isMobile:n}=(deepMerge(this.opts,e),this.opts),o=this.visible||this.treatAsInline;this._createMinMaxDates(),this._limitViewDateByMaxMinDates(),this._handleLocale(),!t.selectedDates&&r&&this.selectDate(r),e.view&&this.setCurrentView(e.view),this._setInputValue(),t.range&&!a?(this.rangeDateTo=!1,this.rangeDateFrom=!1):!t.range&&a&&this.selectedDates.length&&(this.rangeDateFrom=this.selectedDates[0],this.rangeDateTo=this.selectedDates[1]),t.timepicker&&!s?(o&&this.timepicker.destroy(),this.timepicker=!1,this.$timepicker.parentNode.removeChild(this.$timepicker)):!t.timepicker&&s&&this._addTimepicker(),!t.buttons&&i?this._addButtons():t.buttons&&!i?(this.buttons.destroy(),this.$buttons.parentNode.removeChild(this.$buttons)):o&&t.buttons&&i&&this.buttons.clearHtml().render(),!t.isMobile&&n?(this.treatAsInline||$datepickerOverlay||this._createMobileOverlay(),this._addMobileAttributes(),this.visible&&this._showMobileOverlay()):t.isMobile&&!n&&(this._removeMobileAttributes(),this.visible)&&($datepickerOverlay.classList.remove("-active-"),"function"!=typeof this.opts.position)&&this.setPosition(),o&&(this.nav.update(),this.views[this.currentView].render(),this.currentView===consts.days)&&this.views[this.currentView].renderDayNames()};_showMobileOverlay(){$datepickerOverlay.classList.add("-active-")}_hasTransition(){return 0<window.getComputedStyle(this.$datepicker).getPropertyValue("transition-duration").split(", ").reduce((e,t)=>parseFloat(t)+e,0)}isOtherMonth=e=>{e=getParsedDate(e).month;return e!==this.parsedViewDate.month};isOtherYear=e=>{e=getParsedDate(e).year;return e!==this.parsedViewDate.year};isOtherDecade=e=>{var e=getParsedDate(e)["year"],[t,s]=getDecade(this.viewDate);return e<t||s<e};_onChangeSelectedDate=({silent:e})=>{setTimeout(()=>{this._setInputValue(),this.opts.onSelect&&!e&&this._triggerOnSelect()})};_onChangeFocusedDate=(t,{viewDateTransition:s}={})=>{if(t){let e=!1;(e=s?this.isOtherMonth(t)||this.isOtherYear(t)||this.isOtherDecade(t):e)&&this.setViewDate(t)}};_onChangeTime=({hours:e,minutes:t})=>{var s=new Date,{lastSelectedDate:i,opts:{onSelect:a}}=this;let r=i;i||(r=s);s=this.getCell(r,this.currentViewSingular),s=s&&s.adpCell;s&&s.isDisabled||(r.setHours(e),r.setMinutes(t),i?(this._setInputValue(),a&&this._triggerOnSelect()):this.selectDate(r))};_onFocus=e=>{this.visible||this.show()};_onBlur=e=>{this.inFocus||!this.visible||this.opts.isMobile||this.hide()};_onMouseDown=e=>{this.inFocus=!0};_onMouseUp=e=>{this.inFocus=!1,this.$el.focus()};_onResize=()=>{this.visible&&"function"!=typeof this.opts.position&&this.setPosition()};_onClickOverlay=()=>{this.visible&&this.hide()};isWeekend=e=>this.opts.weekends.includes(e);getClampedDate=e=>{let{minDate:t,maxDate:s}=this,i=e;return s&&isDateBigger(e,s)?i=s:t&&isDateSmaller(e,t)&&(i=t),i};on=(e,t)=>{this.__events||(this.__events={}),this.__events[e]?this.__events[e].push(t):this.__events[e]=[t]};off=(e,t)=>{this.__events&&this.__events[e]&&(this.__events[e]=this.__events[e].filter(e=>e!==t))};removeAllEvents=()=>{this.__events={}};trigger=(e,...t)=>{this.__events&&this.__events[e]&&this.__events[e].forEach(e=>{e(...t)})}}